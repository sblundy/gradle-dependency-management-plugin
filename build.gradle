apply plugin: 'groovy'
apply plugin: 'codenarc'
buildscript {
  apply from: 'https://github.com/valkolovos/gradle_cobertura/raw/master/repo/gradle_cobertura/gradle_cobertura/1.2.1/coberturainit.gradle'
}
version = '0.1'
repositories {
  mavenCentral()
}

sourceSets {
  functionalTest {
    groovy.srcDir file('src/functionalTest/groovy')
  }
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  functionalTestRuntime gradleApi()
  functionalTestCompile configurations.testCompile
  functionalTestCompile files(jar.archivePath)
  functionalTestRuntime configurations.compile
  functionalTestRuntime configurations.testRuntime

  codenarc 'org.codenarc:CodeNarc:0.18.1'
}

cobertura {
  coverageSourceDirs = project.sourceSets.main.groovy.srcDirs
}

groovydoc {
  groovyClasspath = configurations.compile
  link('http://www.gradle.org/docs/current/javadoc', 'org.gradle.api.')
  link('http://docs.oracle.com/javase/6/docs/api', 'java.,org.xml.,javax.,org.xml.')
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'javadoc'
  from "${buildDir}/docs/groovydoc"
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

task functionalTest(type:Test, dependsOn: ['test', 'assemble']) {
  testClassesDir = sourceSets.functionalTest.output.classesDir
  classpath = sourceSets.functionalTest.runtimeClasspath
  testReportDir = file("${buildDir}/reports/functional-test")
  testResultsDir = file("${buildDir}/functional-test-results")
}

artifacts {
  archives jar

  archives javadocJar
  archives sourcesJar
}

build.dependsOn.add(functionalTest)